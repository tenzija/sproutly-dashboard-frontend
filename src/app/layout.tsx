import { Geist, Geist_Mono } from "next/font/google";
import "@fontsource/montserrat";
import "@fontsource/montserrat/400.css";
import "@fontsource/montserrat/400-italic.css";
import "./globals.css";
import { headers } from "next/headers";
import ContextProvider from "../context";
import { AuthProvider } from "../context/AuthContext";
import { ToastContainer } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import ThemeProviderClient from "@/theme/ThemeProviderClient";

// REMOVE: import AppKitInit from './AppKitInit';
import Providers from './providers';

const geistSans = Geist({ variable: "--font-geist-sans", subsets: ["latin"] });
const geistMono = Geist_Mono({ variable: "--font-geist-mono", subsets: ["latin"] });

export const metadata = {
  title: "Sproutly",
  description: "Generated by create next app",
};

export default async function RootLayout({ children }: { children: React.ReactNode; }) {
  const cookies = (await headers()).get("cookie");
  return (
    <html lang="en">
      <head>
        <link rel="icon" type="image/svg+xml" href="/Favi.svg" />
      </head>
      <body className={`backgroundImg ${geistSans.variable} ${geistMono.variable}`}>
        {/* REMOVE: <AppKitInit /> */}
        <Providers>
          <ContextProvider cookies={cookies}>
            <AuthProvider>
              <ThemeProviderClient>{children}</ThemeProviderClient>
              <ToastContainer
                position="bottom-right"
                autoClose={5000}
                hideProgressBar={false}
                newestOnTop={true}
                closeOnClick
                rtl={false}
                pauseOnFocusLoss
                draggable
                pauseOnHover
              />
            </AuthProvider>
          </ContextProvider>
        </Providers>
      </body>
    </html>
  );
}
